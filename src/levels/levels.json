{
    "testlevel-1": {
        "id": "test.interface",
        "color": "lightgreen",
        "input": [1, 2, 3],
        "output": [1, 2, 3],
        "func": "(function(num) {return num;})",
        "verFunc": "function() {var res = []; for (var i = 0; i<3; i++) {res.push(Math.floor(Math.random() * 1000));} return res;}",
        "description": "<p><span class='story'>*Mechanical voice*:</span></p><p><span class='story'>&mdash; Hello, engineer. I was waiting for you.</span></p><p><span class='story'>My modules were reseted and you must program them again.</span></p><p>You see two panels. In console you need to write a function, that assepts parameter from Input column and returns value from Expected column. </p><p>Try this one: write <code>function(num) {return num;}</code></p>"
    },
    "testlevel-2": {
        "id": "test.number.processing",
        "color": "pink",
        "input": [1, 2, 3],
        "output": [1, 4, 9],
        "func": "(function(num) {return num*num;})",
        "verFunc": "function() {var res = []; for (var i = 0; i<3; i++) {res.push(Math.floor(Math.random() * 1000));} return res;}",
        "description": "<p><span class='story'>*Mechanical voice*:</span></p><p><span class='story'>&mdash; thenks Torvalds there are computer engineers!</span></p><p><span class='story'>Check my number processing unit.</span></p><p>First three input number is pre-defined. Other are generated to avoid your cheating in this game.</p><p>Of course, you can see a sources of this game and find solution.</p><p>If you will do that, then you have been bitten by Roger Wilco.</p>"

    },
    "testlevel-3": {
        "id": "test.logical.unit",
        "color": "lightblue",
        "input": [0, 1, -1],
        "output": [true, false, false],
        "func": "(function(num) {return !num;})",
        "verFunc": "function() {var res = []; for (var i = 0; i<3; i++) {res.push(Math.floor(Math.random() * 1000));} return res;}",
        "description": "<p><span class='story'>*Mechanical voice*:</span></p><p><span class='story'>&mdash; Yeah, my logical unit. Without it I can't decide what do I want: a strawberry, or to kill people.</span></p><p>If you want, you can create your own levels. Just push them to github repo. And I'll see, what can I do :) Long live the javascript!</p>"
    },
    "testlevel-4": {
        "id": "test.number.difference",
        "color": "lightgreen",
        "input": [1, 2, 3],
        "output": [false, true, false],
        "func": "function(num) {return (num % 2) === 0;}",
        "verFunc": "function() {var res = []; for (var i = 0; i<3; i++) {res.push(Math.floor(Math.random() * 1000));} return res;}",
        "description": "<p><span class='story'>*Mechanical voice*:</span></p><p><span class='story'>&mdash; After that system crash I forgot basic number categories. Is 1 an orange number?..</span></p><p>Sometimes you would't recognize a function in first sight. Just press Load and run button few times to get more values.</p>"
    },
    "testlevel-5": {
        "id": "test.number.math",
        "color": "lightgreen",
        "input": [1, 2, 3],
        "output": [4, 6, 8],
        "func": "(function(num) {return (num+1) * 2;})",
        "verFunc": "function() {var res = []; for (var i = 0; i<3; i++) {res.push(Math.floor(Math.random() * 1000));} return res;}",
        "description": "<p><span class='story'>*Mechanical voice*:</span></p><p><span class='story'>&mdash; My logical unit tolds me that I need to remember simple mathematics.</span></p>"
    },
    "testlevel-6": {
        "id": "test.string.processing",
        "color": "lightgreen",
        "input": ["robots", "better", "humans"],
        "output": ["rob", "bet", "hum"],
        "verFunc": "function() {var res = []; for (var i = 0; i<3; i++) {res.push(Math.random().toString(36).replace(/[^a-z]+/g, ''));} return res;}",
        "func": "function(str) {return str.slice(0, 3);}",
        "description": "<p><span class='story'>*Mechanical voice*:</span></p><p><span class='story'>&mdash; Please, check my string processing unit. It's a pity when you aren't sure in your own words.</span></p>"
    },
    "testlevel-7": {
        "id": "test.logical.operations",
        "color": "lightblue",
        "input": [[true, true], [true, false], [false, true]],
        "output": [true, true, true],
        "func": "(function(param) {return param[0] || param[1];})",
        "verFunc": "function() {var res=[]; for(var i = 0; i<3; i++) {res.push([Math.random() >= 0.5, Math.random() >= 0.5]); } return res;}",
        "description": "<p><span class='story'>*Mechanical voice*:</span></p><p><span class='story'>&mdash; Logic is very, very important. Logic gives to robots a possibility to avoid killing all people.</span></p><p>If there are some parameters with comma delimeter, they passed to your function as an array.</p>"
    },
    "testlevel-8": {
        "id": "test.array.sorting",
        "color": "lightgreen",
        "input": [[1, 0, 2], [5, 4, 3], [3, 22, 1]],
        "output": [[0, 1, 2], [3, 4, 5], [1, 3, 22]],
        "verFunc": "function() {var res=[]; for(var i = 0; i<3; i++) {res.push([Math.floor(Math.random() * 1000),Math.floor(Math.random() * 100),Math.floor(Math.random() * 10)]); } return res;}",
        "func": "(function(param) {return param.sort(function(a,b) {return a-b;});})",
        "description": "<p><span class='story'>*Mechanical voice*:</span></p><p><span class='story'>&mdash; It seems like my array sorting module is completely broken. Take a look, please.</span></p><p>Oh, by the way. You can use <a href='http://underscorejs.org' target='_blank'>underscore.js</a> and jQuery. </p>"
    },
    "testlevel-9": {
        "id": "test.string.finding",
        "color": "lightgreen",
        "input": [["ab", "abcd"], ["ab", "0abc"], ["ab", "efgh"]],
        "output": [true, true, false],
        "func": "(function(param) {var r = new RegExp(param[0], 'g'); return r.test(param[1]);})",
        "verFunc": "function() {var res=[]; for(var i = 0; i<3; i++) {res.push(['ab', Math.random().toString(13).replace(/[^a-z]+/g, '').slice(0, 4)]); } return res;}",
        "description": "<p><span class='story'>*Mechanical voice*:</span></p><p><span class='story'>&mdash; I lost a needle in this haystack.</span></p>"
    },
    "testlevel-10": {
        "id": "test.string.parsing",
        "color": "lightgreen",
        "input": ["<word>key</word>", "<another-word>is:</another-word>", "<lastWord>regexp?</lastWord>"],
        "output": ["key", "is", "regexp"],
        "func": "function(param) {return /<(.*)>([a-z]*).*<\\/\\1>/.exec(param)[2];}",
        "verFunc": "function() {var res=[]; for(var i = 0; i<3; i++) {var word = Math.random().toString(36).replace(/[^a-z]+/g, '').slice(0, 5); var extract = Math.random().toString(36).replace(/[^a-z]+/g, '').slice(0, 10); var symbol = ['1','@','#','$','%','^','&','','',''][Math.floor(Math.random() * 10)]; res.push('<'+word+'>' + extract + symbol + '</' + word + '>'); } return res;}",
        "description": "<p><span class='story'>*Mechanical voice*:</span></p><p><span class='story'>&mdash; When I work as Google Bot, I need parsing unit.</span></p><p><a href='http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags' target='_blank'>I know.</a></p>"
    }
}
